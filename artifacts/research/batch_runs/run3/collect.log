$ /home/j4ck1e/.pyenv/versions/3.11.13/bin/python3 /home/j4ck1e/projects/tubular-upgrade/scripts/collect_data.py --project-root /home/j4ck1e/projects/tubular-upgrade --config research_tests/config.json --results /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/results.csv --summary /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/summary.json --autotune-out-dir /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/out

Building Tubular via CMake...
[100%] Built target Tubular
Running tests via CMake...
[ 66%] Built target Tubular
[100%] Running complete test suite including loop unrolling and function inlining tests
Running standard tests...
NEW PROJECT 4 TESTS
Compilation of test 01 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 02 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 03 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 04 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 05 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 06 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 07 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 08 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 09 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 10 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 11 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 12 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 13 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 14 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 15 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 16 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 17 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 18 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 19 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 20 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 21 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 22 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 23 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of test 24 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
---
PROJECT 3 Testing
Compilation of P3 test 01 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 02 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 03 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 04 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 05 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 06 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 07 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 08 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 09 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 10 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 11 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 12 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 13 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 14 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 15 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 16 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 17 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 18 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 19 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 20 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 21 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 22 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 23 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 24 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 25 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 26 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 27 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 28 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 29 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
Compilation of P3 test 30 to WAT format SUCCESSFUL.
                   ... to WASM format SUCCESSFUL.
---
ERROR Testing
ERROR (at 6:9): Unknown variable 'Add2'.
Error test 01 ... Passed!
ERROR (at 6:9): Function 'Add' expects 2 arguments but got 3.
Error test 02 ... Passed!
ERROR (at 6:9): Function 'Add' expects 2 arguments but got 0.
Error test 03 ... Passed!
ERROR (at 6:19): Argument 2 of function 'Add' has type mismatch.
Error test 04 ... Passed!
ERROR (at 6:7): Cannot use operator '=' on types char and int
Error test 05 ... Passed!
ERROR (at 3:11): Cannot use operator '+' on types int and string
Error test 06 ... Passed!
ERROR (at 3:9): Cannot index into type 'int'. Expected a string.
Error test 07 ... Passed!
ERROR (at 3:9): Index must be of type int, not 'string'.
Error test 08 ... Passed!
ERROR (at 3:9): size() expects a string argument, but got 'int'.
Error test 09 ... Passed!
ERROR (at 3:14): Unexpected token ')'
Error test 10 ... Passed!
ERROR (at 3:17): Expected token of type ')', but found type ','
Error test 11 ... Passed!
---
ERROR Testing from Project 3
Error test 01 ... Passed!
Error test 02 ... Passed!
Error test 03 ... Passed!
Error test 04 ... Passed!
Error test 05 ... Passed!
Error test 06 ... Passed!
Error test 07 ... Passed!
Error test 08 ... Passed!
Error test 09 ... Passed!
Error test 10 ... Passed!
Error test 11 ... Passed!
Error test 12 ... Passed!
Error test 13 ... Passed!
Error test 14 ... Passed!
Error test 15 ... Passed!
Error test 16 ... Passed!
Error test 17 ... Passed!
Error test 18 ... Passed!
Error test 19 ... Passed!
---
LOOP UNROLLING PERFORMANCE TESTS
Running loop unrolling performance tests...
=== LOOP UNROLLING PERFORMANCE TESTS ===

Testing loop unrolling with factors: 1 4 8 16

--- Testing ultra-01.tube ---
  ✓ Generated ultra-01-unroll1.wasm
  ✓ Generated ultra-01-unroll4.wasm
  ✓ Generated ultra-01-unroll8.wasm
  ✓ Generated ultra-01-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 3ms
    Unroll Factor 8: 3ms
    Unroll Factor 16: 3ms
  Performance vs baseline (factor=1):
    Factor 4: No change
    Factor 8: No change
    Factor 16: No change

--- Testing ultra-02.tube ---
  ✓ Generated ultra-02-unroll1.wasm
  ✓ Generated ultra-02-unroll4.wasm
  ✓ Generated ultra-02-unroll8.wasm
  ✓ Generated ultra-02-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 11ms
    Unroll Factor 4: 13ms
    Unroll Factor 8: 14ms
    Unroll Factor 16: 17ms
  Performance vs baseline (factor=1):
    Factor 4: +2ms (+18%)
    Factor 8: +3ms (+27%)
    Factor 16: +6ms (+54%)

--- Testing ultra-03.tube ---
  ✓ Generated ultra-03-unroll1.wasm
  ✓ Generated ultra-03-unroll4.wasm
  ✓ Generated ultra-03-unroll8.wasm
  ✓ Generated ultra-03-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 5ms
    Unroll Factor 4: 6ms
    Unroll Factor 8: 8ms
    Unroll Factor 16: 10ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+20%)
    Factor 8: +3ms (+60%)
    Factor 16: +5ms (+100%)

--- Testing ultra-04.tube ---
  ✓ Generated ultra-04-unroll1.wasm
  ✓ Generated ultra-04-unroll4.wasm
  ✓ Generated ultra-04-unroll8.wasm
  ✓ Generated ultra-04-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 5ms
    Unroll Factor 8: 7ms
    Unroll Factor 16: 10ms
  Performance vs baseline (factor=1):
    Factor 4: +2ms (+66%)
    Factor 8: +4ms (+133%)
    Factor 16: +7ms (+233%)

--- Testing ultra-05.tube ---
  ✓ Generated ultra-05-unroll1.wasm
  ✓ Generated ultra-05-unroll4.wasm
  ✓ Generated ultra-05-unroll8.wasm
  ✓ Generated ultra-05-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 4ms
    Unroll Factor 8: 3ms
    Unroll Factor 16: 3ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+33%)
    Factor 8: No change
    Factor 16: No change

=== SUMMARY ===
Total compilation attempts: 20
Successful compilations: 20
Success rate: 100%

Generated files for web testing:
  ✓ ultra-01-unroll1.wasm (ready for performance testing)
  ✓ ultra-01-unroll4.wasm (ready for performance testing)
  ✓ ultra-01-unroll8.wasm (ready for performance testing)
  ✓ ultra-01-unroll16.wasm (ready for performance testing)
  ✓ ultra-02-unroll1.wasm (ready for performance testing)
  ✓ ultra-02-unroll4.wasm (ready for performance testing)
  ✓ ultra-02-unroll8.wasm (ready for performance testing)
  ✓ ultra-02-unroll16.wasm (ready for performance testing)
  ✓ ultra-03-unroll1.wasm (ready for performance testing)
  ✓ ultra-03-unroll4.wasm (ready for performance testing)
  ✓ ultra-03-unroll8.wasm (ready for performance testing)
  ✓ ultra-03-unroll16.wasm (ready for performance testing)
  ✓ ultra-04-unroll1.wasm (ready for performance testing)
  ✓ ultra-04-unroll4.wasm (ready for performance testing)
  ✓ ultra-04-unroll8.wasm (ready for performance testing)
  ✓ ultra-04-unroll16.wasm (ready for performance testing)
  ✓ ultra-05-unroll1.wasm (ready for performance testing)
  ✓ ultra-05-unroll4.wasm (ready for performance testing)
  ✓ ultra-05-unroll8.wasm (ready for performance testing)
  ✓ ultra-05-unroll16.wasm (ready for performance testing)

To test in browser, open loop-unrolling-tester.html
---
TAIL RECURSION TESTS
Running tail recursion tests...
=== TAIL RECURSION TESTS ===

--- tail-test-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=235, loop=235, expected=235
Median per-call: off=0.000ms, loop=0.000ms (-33.1%)
[0;32m✓ Execution OK[0m

--- tail-test-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=5050, loop=5050, expected=5050
Median per-call: off=0.000ms, loop=0.000ms (-66.7%)
[0;32m✓ Execution OK[0m

--- tail-test-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=500500, loop=500500, expected=500500
Median per-call: off=0.004ms, loop=0.001ms (-70.6%)
[0;32m✓ Execution OK[0m

--- tail-test-04 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=6, loop=6, expected=6
Median per-call: off=0.000ms, loop=0.000ms (-30.6%)
[0;32m✓ Execution OK[0m

--- tail-test-05 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=1048576, loop=1048576, expected=1048576
Median per-call: off=0.000ms, loop=0.000ms (-52.7%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=50005000, loop=50005000, expected=50005000
Median per-call: off=0.007ms, loop=0.002ms (-69.9%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=102334155, loop=102334155, expected=102334155
Median per-call: off=0.000ms, loop=0.000ms (-52.3%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=50005000, loop=50005000, expected=50005000
Median per-call: off=0.007ms, loop=0.002ms (-69.5%)
[0;32m✓ Execution OK[0m

--- tail-test-extreme ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=1048576, loop=1048576, expected=1048576
Median per-call: off=0.000ms, loop=0.000ms (-40.0%)
[0;32m✓ Execution OK[0m

--- tail-test-order ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=8, loop=8, expected=8
Median per-call: off=0.000ms, loop=0.000ms (-34.4%)
[0;32m✓ Execution OK[0m

=== STRESS TESTS ===
--- tail-test-stress-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=-1335139135, loop=-1335139135 (baseline expected=-1335139135)
Median per-call: off=0.031ms, loop=0.028ms (-10.3%)
[0;32m✓ Execution OK[0m

--- tail-test-stress-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=-69463358 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.036ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

--- tail-test-stress-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=491873870, loop=491873870 (baseline expected=491873870)
Median per-call: off=0.039ms, loop=0.032ms (-19.5%)
[0;32m✓ Execution OK[0m

--- tail-test-stress-04 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=-1045543988 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.017ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

--- tail-test-stress-05 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=2023917998 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.119ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

=== END TAIL RECURSION TESTS ===
---
FUNCTION INLINING ARTIFACTS
Generating inlining comparison artifacts...
=== FUNCTION INLINING WASM GENERATOR ===

Generating WASM files for function inlining HTML test page...
Project root: /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/../..
Tubular executable: /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/../../build/Tubular

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-01...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-02...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-03...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-04...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-05...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-06...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-07...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-perf-08...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-regression-01...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-stress-01...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-01...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-02...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-03...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-04...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-05...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-06...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-07...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

Processing /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/inline-test-08...
  → Generating non-inlined version...
    [0;32m✓ Non-inlined WASM generated successfully[0m
  → Generating inlined version...
    [0;32m✓ Inlined WASM generated successfully[0m

=== SUMMARY ===
Total tests processed: 18
Successful: [0;32m18[0m
Failed: [0;31m0[0m
[0;32mAll WASM files generated successfully![0m

You can now open tests/function-inlining/function-inlining-tester.html in a browser
or run: cd tests && python -m http.server
---
CLI FLAG COMBINATION TESTS
Valid combo 1 ... Passed
Valid combo 2 (order) ... Passed
Valid combo 3 (no-unroll + factor=1) ... Passed
Invalid combo (no-unroll + factor>1) ... Passed
Invalid combo (duplicate unroll-factor) ... Passed
Invalid combo (conflicting tail) ... Passed
---
Of 24 regular test files...
...generated 24 WAT files
...converted 24 WAT files to wasm files for testing.
Of 30 Project 3 tests (that need to still work)...
...generated 30 WAT files
...converted 30 WAT files to wasm files for testing.
Passed 11 of 11 error tests (Failed 0)
Passed 19 of 19 Project 3 error tests (Failed 0)
Running loop unrolling tests...
=== LOOP UNROLLING PERFORMANCE TESTS ===

Testing loop unrolling with factors: 1 4 8 16

--- Testing ultra-01.tube ---
  ✓ Generated ultra-01-unroll1.wasm
  ✓ Generated ultra-01-unroll4.wasm
  ✓ Generated ultra-01-unroll8.wasm
  ✓ Generated ultra-01-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 4ms
    Unroll Factor 8: 3ms
    Unroll Factor 16: 4ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+33%)
    Factor 8: No change
    Factor 16: +1ms (+33%)

--- Testing ultra-02.tube ---
  ✓ Generated ultra-02-unroll1.wasm
  ✓ Generated ultra-02-unroll4.wasm
  ✓ Generated ultra-02-unroll8.wasm
  ✓ Generated ultra-02-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 12ms
    Unroll Factor 4: 13ms
    Unroll Factor 8: 14ms
    Unroll Factor 16: 17ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+8%)
    Factor 8: +2ms (+16%)
    Factor 16: +5ms (+41%)

--- Testing ultra-03.tube ---
  ✓ Generated ultra-03-unroll1.wasm
  ✓ Generated ultra-03-unroll4.wasm
  ✓ Generated ultra-03-unroll8.wasm
  ✓ Generated ultra-03-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 5ms
    Unroll Factor 4: 6ms
    Unroll Factor 8: 7ms
    Unroll Factor 16: 10ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+20%)
    Factor 8: +2ms (+40%)
    Factor 16: +5ms (+100%)

--- Testing ultra-04.tube ---
  ✓ Generated ultra-04-unroll1.wasm
  ✓ Generated ultra-04-unroll4.wasm
  ✓ Generated ultra-04-unroll8.wasm
  ✓ Generated ultra-04-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 4ms
    Unroll Factor 8: 6ms
    Unroll Factor 16: 9ms
  Performance vs baseline (factor=1):
    Factor 4: +1ms (+33%)
    Factor 8: +3ms (+100%)
    Factor 16: +6ms (+200%)

--- Testing ultra-05.tube ---
  ✓ Generated ultra-05-unroll1.wasm
  ✓ Generated ultra-05-unroll4.wasm
  ✓ Generated ultra-05-unroll8.wasm
  ✓ Generated ultra-05-unroll16.wasm
  Compilation Time Analysis:
    Unroll Factor 1: 3ms
    Unroll Factor 4: 3ms
    Unroll Factor 8: 4ms
    Unroll Factor 16: 3ms
  Performance vs baseline (factor=1):
    Factor 4: No change
    Factor 8: +1ms (+33%)
    Factor 16: No change

=== SUMMARY ===
Total compilation attempts: 20
Successful compilations: 20
Success rate: 100%

Generated files for web testing:
  ✓ ultra-01-unroll1.wasm (ready for performance testing)
  ✓ ultra-01-unroll4.wasm (ready for performance testing)
  ✓ ultra-01-unroll8.wasm (ready for performance testing)
  ✓ ultra-01-unroll16.wasm (ready for performance testing)
  ✓ ultra-02-unroll1.wasm (ready for performance testing)
  ✓ ultra-02-unroll4.wasm (ready for performance testing)
  ✓ ultra-02-unroll8.wasm (ready for performance testing)
  ✓ ultra-02-unroll16.wasm (ready for performance testing)
  ✓ ultra-03-unroll1.wasm (ready for performance testing)
  ✓ ultra-03-unroll4.wasm (ready for performance testing)
  ✓ ultra-03-unroll8.wasm (ready for performance testing)
  ✓ ultra-03-unroll16.wasm (ready for performance testing)
  ✓ ultra-04-unroll1.wasm (ready for performance testing)
  ✓ ultra-04-unroll4.wasm (ready for performance testing)
  ✓ ultra-04-unroll8.wasm (ready for performance testing)
  ✓ ultra-04-unroll16.wasm (ready for performance testing)
  ✓ ultra-05-unroll1.wasm (ready for performance testing)
  ✓ ultra-05-unroll4.wasm (ready for performance testing)
  ✓ ultra-05-unroll8.wasm (ready for performance testing)
  ✓ ultra-05-unroll16.wasm (ready for performance testing)

To test in browser, open loop-unrolling-tester.html
Running function inlining tests...
=== FUNCTION INLINING TESTS ===

Running function inlining tests...
Project root: /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/../..
Tubular executable: /home/j4ck1e/projects/tubular-upgrade/tests/function-inlining/../../build/Tubular

--- Testing inline-test-01 ---
Expected: Simple function should be inlined
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 10
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
--- Testing inline-test-02 ---
Expected: Function calls should be inlined
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 32
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
--- Testing inline-test-03 ---
Expected: Complex function should NOT be inlined
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 14
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
--- Testing inline-test-04 ---
Expected: Simple_add inlined; complex_multiply preserved
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 88
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
--- Testing inline-test-05 ---
Expected: Parameterless function SHOULD be inlined
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 42
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
--- Testing inline-test-06 ---
Expected: Parameterless functions SHOULD be inlined
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 15
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
--- Testing inline-test-07 ---
Expected: Recursive functions should be detected and handled
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 43
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
--- Testing inline-test-08 ---
Expected: Single-use functions should be inlined aggressively
[0;32m✓ Compilation successful[0m
[0;32m✓ WAT to WASM conversion successful[0m
Execution result: 85
[0;32m✓ WebAssembly execution successful[0m

  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
  → Function call preserved (not inlined)
=== SUMMARY ===
Total tests: 8
Passed: [0;32m8[0m
Failed: [0;31m0[0m
[0;32mAll function inlining tests passed![0m
Running tail recursion tests...
=== TAIL RECURSION TESTS ===

--- tail-test-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=235, loop=235, expected=235
Median per-call: off=0.000ms, loop=0.000ms (-34.0%)
[0;32m✓ Execution OK[0m

--- tail-test-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=5050, loop=5050, expected=5050
Median per-call: off=0.000ms, loop=0.000ms (-69.8%)
[0;32m✓ Execution OK[0m

--- tail-test-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=500500, loop=500500, expected=500500
Median per-call: off=0.005ms, loop=0.001ms (-81.0%)
[0;32m✓ Execution OK[0m

--- tail-test-04 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=6, loop=6, expected=6
Median per-call: off=0.000ms, loop=0.000ms (-30.0%)
[0;32m✓ Execution OK[0m

--- tail-test-05 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=1048576, loop=1048576, expected=1048576
Median per-call: off=0.000ms, loop=0.000ms (-52.9%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=50005000, loop=50005000, expected=50005000
Median per-call: off=0.007ms, loop=0.002ms (-70.9%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=102334155, loop=102334155, expected=102334155
Median per-call: off=0.000ms, loop=0.000ms (-54.7%)
[0;32m✓ Execution OK[0m

--- tail-test-deep-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=50005000, loop=50005000, expected=50005000
Median per-call: off=0.008ms, loop=0.002ms (-73.3%)
[0;32m✓ Execution OK[0m

--- tail-test-extreme ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=1048576, loop=1048576, expected=1048576
Median per-call: off=0.000ms, loop=0.000ms (-54.2%)
[0;32m✓ Execution OK[0m

--- tail-test-order ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=8, loop=8, expected=8
Median per-call: off=0.000ms, loop=0.000ms (-32.6%)
[0;32m✓ Execution OK[0m

=== STRESS TESTS ===
--- tail-test-stress-01 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=-1335139135, loop=-1335139135 (baseline expected=-1335139135)
Median per-call: off=0.030ms, loop=0.026ms (-12.8%)
[0;32m✓ Execution OK[0m

--- tail-test-stress-02 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=-69463358 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.037ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

--- tail-test-stress-03 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Output off=491873870, loop=491873870 (baseline expected=491873870)
Median per-call: off=0.036ms, loop=0.032ms (-9.8%)
[0;32m✓ Execution OK[0m

--- tail-test-stress-04 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=-1045543988 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.017ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

--- tail-test-stress-05 ---
[0;32m✓ Compilation successful (off/loop)[0m
[0;32m✓ WAT→WASM conversion successful[0m
Baseline execution error: Maximum call stack size exceeded
Output loop=2023917998 (baseline failed: Maximum call stack size exceeded)
Median per-call: loop=0.109ms (baseline unavailable: Maximum call stack size exceeded)
[0;32m✓ Execution OK[0m

=== END TAIL RECURSION TESTS ===
All tests completed.
[100%] Built target tests
[RUN] rt01-fib-recursive / baseline [inline-unroll-tail]
[OK] rt01-fib-recursive / baseline [inline-unroll-tail]: 20.748 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / baseline [inline-tail-unroll]
[OK] rt01-fib-recursive / baseline [inline-tail-unroll]: 20.792 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / baseline [unroll-inline-tail]
[OK] rt01-fib-recursive / baseline [unroll-inline-tail]: 20.518 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / baseline [unroll-tail-inline]
[OK] rt01-fib-recursive / baseline [unroll-tail-inline]: 20.851 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / baseline [tail-inline-unroll]
[OK] rt01-fib-recursive / baseline [tail-inline-unroll]: 20.579 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / baseline [tail-unroll-inline]
[OK] rt01-fib-recursive / baseline [tail-unroll-inline]: 20.755 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt01-fib-recursive / no-inline [inline-unroll-tail]
[OK] rt01-fib-recursive / no-inline [inline-unroll-tail]: 20.807 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / no-inline [inline-tail-unroll]
[OK] rt01-fib-recursive / no-inline [inline-tail-unroll]: 20.755 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / no-inline [unroll-inline-tail]
[OK] rt01-fib-recursive / no-inline [unroll-inline-tail]: 20.534 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / no-inline [unroll-tail-inline]
[OK] rt01-fib-recursive / no-inline [unroll-tail-inline]: 20.740 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / no-inline [tail-inline-unroll]
[OK] rt01-fib-recursive / no-inline [tail-inline-unroll]: 20.868 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / no-inline [tail-unroll-inline]
[OK] rt01-fib-recursive / no-inline [tail-unroll-inline]: 20.606 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt01-fib-recursive / unroll-4 [inline-unroll-tail]
[OK] rt01-fib-recursive / unroll-4 [inline-unroll-tail]: 20.707 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / unroll-4 [inline-tail-unroll]
[OK] rt01-fib-recursive / unroll-4 [inline-tail-unroll]: 20.471 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / unroll-4 [unroll-inline-tail]
[OK] rt01-fib-recursive / unroll-4 [unroll-inline-tail]: 20.499 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / unroll-4 [unroll-tail-inline]
[OK] rt01-fib-recursive / unroll-4 [unroll-tail-inline]: 20.518 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / unroll-4 [tail-inline-unroll]
[OK] rt01-fib-recursive / unroll-4 [tail-inline-unroll]: 20.409 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / unroll-4 [tail-unroll-inline]
[OK] rt01-fib-recursive / unroll-4 [tail-unroll-inline]: 20.608 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt01-fib-recursive / unroll-8 [inline-unroll-tail]
[OK] rt01-fib-recursive / unroll-8 [inline-unroll-tail]: 20.593 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / unroll-8 [inline-tail-unroll]
[OK] rt01-fib-recursive / unroll-8 [inline-tail-unroll]: 20.716 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / unroll-8 [unroll-inline-tail]
[OK] rt01-fib-recursive / unroll-8 [unroll-inline-tail]: 20.682 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / unroll-8 [unroll-tail-inline]
[OK] rt01-fib-recursive / unroll-8 [unroll-tail-inline]: 20.689 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / unroll-8 [tail-inline-unroll]
[OK] rt01-fib-recursive / unroll-8 [tail-inline-unroll]: 20.462 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / unroll-8 [tail-unroll-inline]
[OK] rt01-fib-recursive / unroll-8 [tail-unroll-inline]: 20.399 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt01-fib-recursive / tail-off [inline-unroll-tail]
[OK] rt01-fib-recursive / tail-off [inline-unroll-tail]: 20.571 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / tail-off [inline-tail-unroll]
[OK] rt01-fib-recursive / tail-off [inline-tail-unroll]: 20.383 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / tail-off [unroll-inline-tail]
[OK] rt01-fib-recursive / tail-off [unroll-inline-tail]: 20.448 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / tail-off [unroll-tail-inline]
[OK] rt01-fib-recursive / tail-off [unroll-tail-inline]: 20.575 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / tail-off [tail-inline-unroll]
[OK] rt01-fib-recursive / tail-off [tail-inline-unroll]: 20.655 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / tail-off [tail-unroll-inline]
[OK] rt01-fib-recursive / tail-off [tail-unroll-inline]: 20.746 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt01-fib-recursive / combo-inline-unroll [inline-unroll-tail]
[OK] rt01-fib-recursive / combo-inline-unroll [inline-unroll-tail]: 20.543 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt01-fib-recursive / combo-inline-unroll [inline-tail-unroll]
[OK] rt01-fib-recursive / combo-inline-unroll [inline-tail-unroll]: 20.553 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt01-fib-recursive / combo-inline-unroll [unroll-inline-tail]
[OK] rt01-fib-recursive / combo-inline-unroll [unroll-inline-tail]: 20.448 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt01-fib-recursive / combo-inline-unroll [unroll-tail-inline]
[OK] rt01-fib-recursive / combo-inline-unroll [unroll-tail-inline]: 20.547 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt01-fib-recursive / combo-inline-unroll [tail-inline-unroll]
[OK] rt01-fib-recursive / combo-inline-unroll [tail-inline-unroll]: 20.623 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt01-fib-recursive / combo-inline-unroll [tail-unroll-inline]
[OK] rt01-fib-recursive / combo-inline-unroll [tail-unroll-inline]: 20.465 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / baseline [inline-unroll-tail]
[OK] rt02-tail-factorial / baseline [inline-unroll-tail]: 19.735 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / baseline [inline-tail-unroll]
[OK] rt02-tail-factorial / baseline [inline-tail-unroll]: 19.701 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / baseline [unroll-inline-tail]
[OK] rt02-tail-factorial / baseline [unroll-inline-tail]: 19.548 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / baseline [unroll-tail-inline]
[OK] rt02-tail-factorial / baseline [unroll-tail-inline]: 19.603 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / baseline [tail-inline-unroll]
[OK] rt02-tail-factorial / baseline [tail-inline-unroll]: 19.672 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / baseline [tail-unroll-inline]
[OK] rt02-tail-factorial / baseline [tail-unroll-inline]: 19.574 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / no-inline [inline-unroll-tail]
[OK] rt02-tail-factorial / no-inline [inline-unroll-tail]: 19.511 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / no-inline [inline-tail-unroll]
[OK] rt02-tail-factorial / no-inline [inline-tail-unroll]: 19.498 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / no-inline [unroll-inline-tail]
[OK] rt02-tail-factorial / no-inline [unroll-inline-tail]: 19.782 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / no-inline [unroll-tail-inline]
[OK] rt02-tail-factorial / no-inline [unroll-tail-inline]: 19.583 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / no-inline [tail-inline-unroll]
[OK] rt02-tail-factorial / no-inline [tail-inline-unroll]: 19.737 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / no-inline [tail-unroll-inline]
[OK] rt02-tail-factorial / no-inline [tail-unroll-inline]: 19.788 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / unroll-4 [inline-unroll-tail]
[OK] rt02-tail-factorial / unroll-4 [inline-unroll-tail]: 19.743 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / unroll-4 [inline-tail-unroll]
[OK] rt02-tail-factorial / unroll-4 [inline-tail-unroll]: 19.556 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / unroll-4 [unroll-inline-tail]
[OK] rt02-tail-factorial / unroll-4 [unroll-inline-tail]: 19.672 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / unroll-4 [unroll-tail-inline]
[OK] rt02-tail-factorial / unroll-4 [unroll-tail-inline]: 19.909 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / unroll-4 [tail-inline-unroll]
[OK] rt02-tail-factorial / unroll-4 [tail-inline-unroll]: 19.711 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / unroll-4 [tail-unroll-inline]
[OK] rt02-tail-factorial / unroll-4 [tail-unroll-inline]: 20.407 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / unroll-8 [inline-unroll-tail]
[OK] rt02-tail-factorial / unroll-8 [inline-unroll-tail]: 19.806 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / unroll-8 [inline-tail-unroll]
[OK] rt02-tail-factorial / unroll-8 [inline-tail-unroll]: 19.842 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / unroll-8 [unroll-inline-tail]
[OK] rt02-tail-factorial / unroll-8 [unroll-inline-tail]: 19.881 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / unroll-8 [unroll-tail-inline]
[OK] rt02-tail-factorial / unroll-8 [unroll-tail-inline]: 19.721 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / unroll-8 [tail-inline-unroll]
[OK] rt02-tail-factorial / unroll-8 [tail-inline-unroll]: 19.670 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / unroll-8 [tail-unroll-inline]
[OK] rt02-tail-factorial / unroll-8 [tail-unroll-inline]: 19.522 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / tail-off [inline-unroll-tail]
[OK] rt02-tail-factorial / tail-off [inline-unroll-tail]: 19.698 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / tail-off [inline-tail-unroll]
[OK] rt02-tail-factorial / tail-off [inline-tail-unroll]: 19.871 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / tail-off [unroll-inline-tail]
[OK] rt02-tail-factorial / tail-off [unroll-inline-tail]: 19.931 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / tail-off [unroll-tail-inline]
[OK] rt02-tail-factorial / tail-off [unroll-tail-inline]: 19.700 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / tail-off [tail-inline-unroll]
[OK] rt02-tail-factorial / tail-off [tail-inline-unroll]: 19.656 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / tail-off [tail-unroll-inline]
[OK] rt02-tail-factorial / tail-off [tail-unroll-inline]: 19.680 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt02-tail-factorial / combo-inline-unroll [inline-unroll-tail]
[OK] rt02-tail-factorial / combo-inline-unroll [inline-unroll-tail]: 19.681 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt02-tail-factorial / combo-inline-unroll [inline-tail-unroll]
[OK] rt02-tail-factorial / combo-inline-unroll [inline-tail-unroll]: 19.645 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt02-tail-factorial / combo-inline-unroll [unroll-inline-tail]
[OK] rt02-tail-factorial / combo-inline-unroll [unroll-inline-tail]: 19.720 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt02-tail-factorial / combo-inline-unroll [unroll-tail-inline]
[OK] rt02-tail-factorial / combo-inline-unroll [unroll-tail-inline]: 19.738 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt02-tail-factorial / combo-inline-unroll [tail-inline-unroll]
[OK] rt02-tail-factorial / combo-inline-unroll [tail-inline-unroll]: 19.855 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt02-tail-factorial / combo-inline-unroll [tail-unroll-inline]
[OK] rt02-tail-factorial / combo-inline-unroll [tail-unroll-inline]: 19.710 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / baseline [inline-unroll-tail]
[OK] rt03-loop-summation / baseline [inline-unroll-tail]: 19.680 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / baseline [inline-tail-unroll]
[OK] rt03-loop-summation / baseline [inline-tail-unroll]: 19.670 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / baseline [unroll-inline-tail]
[OK] rt03-loop-summation / baseline [unroll-inline-tail]: 19.983 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / baseline [unroll-tail-inline]
[OK] rt03-loop-summation / baseline [unroll-tail-inline]: 19.648 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / baseline [tail-inline-unroll]
[OK] rt03-loop-summation / baseline [tail-inline-unroll]: 19.940 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / baseline [tail-unroll-inline]
[OK] rt03-loop-summation / baseline [tail-unroll-inline]: 19.808 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / no-inline [inline-unroll-tail]
[OK] rt03-loop-summation / no-inline [inline-unroll-tail]: 19.817 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / no-inline [inline-tail-unroll]
[OK] rt03-loop-summation / no-inline [inline-tail-unroll]: 19.851 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / no-inline [unroll-inline-tail]
[OK] rt03-loop-summation / no-inline [unroll-inline-tail]: 19.703 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / no-inline [unroll-tail-inline]
[OK] rt03-loop-summation / no-inline [unroll-tail-inline]: 19.788 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / no-inline [tail-inline-unroll]
[OK] rt03-loop-summation / no-inline [tail-inline-unroll]: 19.950 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / no-inline [tail-unroll-inline]
[OK] rt03-loop-summation / no-inline [tail-unroll-inline]: 19.736 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / unroll-4 [inline-unroll-tail]
[OK] rt03-loop-summation / unroll-4 [inline-unroll-tail]: 19.940 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / unroll-4 [inline-tail-unroll]
[OK] rt03-loop-summation / unroll-4 [inline-tail-unroll]: 19.672 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / unroll-4 [unroll-inline-tail]
[OK] rt03-loop-summation / unroll-4 [unroll-inline-tail]: 19.847 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / unroll-4 [unroll-tail-inline]
[OK] rt03-loop-summation / unroll-4 [unroll-tail-inline]: 20.034 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / unroll-4 [tail-inline-unroll]
[OK] rt03-loop-summation / unroll-4 [tail-inline-unroll]: 19.863 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / unroll-4 [tail-unroll-inline]
[OK] rt03-loop-summation / unroll-4 [tail-unroll-inline]: 19.801 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / unroll-8 [inline-unroll-tail]
[OK] rt03-loop-summation / unroll-8 [inline-unroll-tail]: 19.676 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / unroll-8 [inline-tail-unroll]
[OK] rt03-loop-summation / unroll-8 [inline-tail-unroll]: 19.634 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / unroll-8 [unroll-inline-tail]
[OK] rt03-loop-summation / unroll-8 [unroll-inline-tail]: 19.832 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / unroll-8 [unroll-tail-inline]
[OK] rt03-loop-summation / unroll-8 [unroll-tail-inline]: 19.731 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / unroll-8 [tail-inline-unroll]
[OK] rt03-loop-summation / unroll-8 [tail-inline-unroll]: 19.895 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / unroll-8 [tail-unroll-inline]
[OK] rt03-loop-summation / unroll-8 [tail-unroll-inline]: 19.794 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / tail-off [inline-unroll-tail]
[OK] rt03-loop-summation / tail-off [inline-unroll-tail]: 19.732 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / tail-off [inline-tail-unroll]
[OK] rt03-loop-summation / tail-off [inline-tail-unroll]: 19.918 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / tail-off [unroll-inline-tail]
[OK] rt03-loop-summation / tail-off [unroll-inline-tail]: 20.017 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / tail-off [unroll-tail-inline]
[OK] rt03-loop-summation / tail-off [unroll-tail-inline]: 20.077 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / tail-off [tail-inline-unroll]
[OK] rt03-loop-summation / tail-off [tail-inline-unroll]: 20.184 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / tail-off [tail-unroll-inline]
[OK] rt03-loop-summation / tail-off [tail-unroll-inline]: 19.736 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt03-loop-summation / combo-inline-unroll [inline-unroll-tail]
[OK] rt03-loop-summation / combo-inline-unroll [inline-unroll-tail]: 20.023 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt03-loop-summation / combo-inline-unroll [inline-tail-unroll]
[OK] rt03-loop-summation / combo-inline-unroll [inline-tail-unroll]: 19.951 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt03-loop-summation / combo-inline-unroll [unroll-inline-tail]
[OK] rt03-loop-summation / combo-inline-unroll [unroll-inline-tail]: 19.821 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt03-loop-summation / combo-inline-unroll [unroll-tail-inline]
[OK] rt03-loop-summation / combo-inline-unroll [unroll-tail-inline]: 19.688 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt03-loop-summation / combo-inline-unroll [tail-inline-unroll]
[OK] rt03-loop-summation / combo-inline-unroll [tail-inline-unroll]: 19.896 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt03-loop-summation / combo-inline-unroll [tail-unroll-inline]
[OK] rt03-loop-summation / combo-inline-unroll [tail-unroll-inline]: 19.916 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / baseline [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / baseline [inline-unroll-tail]: 19.872 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / baseline [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / baseline [inline-tail-unroll]: 19.972 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / baseline [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / baseline [unroll-inline-tail]: 19.787 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / baseline [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / baseline [unroll-tail-inline]: 20.038 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / baseline [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / baseline [tail-inline-unroll]: 19.825 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / baseline [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / baseline [tail-unroll-inline]: 19.874 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / no-inline [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / no-inline [inline-unroll-tail]: 19.950 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / no-inline [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / no-inline [inline-tail-unroll]: 19.837 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / no-inline [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / no-inline [unroll-inline-tail]: 20.013 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / no-inline [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / no-inline [unroll-tail-inline]: 19.745 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / no-inline [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / no-inline [tail-inline-unroll]: 19.913 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / no-inline [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / no-inline [tail-unroll-inline]: 19.808 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / unroll-4 [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / unroll-4 [inline-unroll-tail]: 19.722 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / unroll-4 [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / unroll-4 [inline-tail-unroll]: 19.644 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / unroll-4 [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / unroll-4 [unroll-inline-tail]: 19.682 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / unroll-4 [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / unroll-4 [unroll-tail-inline]: 19.663 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / unroll-4 [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / unroll-4 [tail-inline-unroll]: 19.838 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / unroll-4 [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / unroll-4 [tail-unroll-inline]: 19.873 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / unroll-8 [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / unroll-8 [inline-unroll-tail]: 19.764 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / unroll-8 [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / unroll-8 [inline-tail-unroll]: 19.911 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / unroll-8 [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / unroll-8 [unroll-inline-tail]: 20.077 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / unroll-8 [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / unroll-8 [unroll-tail-inline]: 19.565 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / unroll-8 [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / unroll-8 [tail-inline-unroll]: 19.591 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / unroll-8 [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / unroll-8 [tail-unroll-inline]: 19.845 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / tail-off [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / tail-off [inline-unroll-tail]: 19.908 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / tail-off [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / tail-off [inline-tail-unroll]: 19.773 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / tail-off [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / tail-off [unroll-inline-tail]: 19.978 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / tail-off [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / tail-off [unroll-tail-inline]: 19.862 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / tail-off [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / tail-off [tail-inline-unroll]: 19.987 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / tail-off [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / tail-off [tail-unroll-inline]: 19.954 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [inline-unroll-tail]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [inline-unroll-tail]: 19.819 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [inline-tail-unroll]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [inline-tail-unroll]: 19.823 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [unroll-inline-tail]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [unroll-inline-tail]: 19.809 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [unroll-tail-inline]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [unroll-tail-inline]: 19.741 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [tail-inline-unroll]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [tail-inline-unroll]: 19.740 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt04-stride-heavy-loop / combo-inline-unroll [tail-unroll-inline]
[OK] rt04-stride-heavy-loop / combo-inline-unroll [tail-unroll-inline]: 19.679 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / baseline [inline-unroll-tail]
[OK] rt05-nested-mix / baseline [inline-unroll-tail]: 19.560 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / baseline [inline-tail-unroll]
[OK] rt05-nested-mix / baseline [inline-tail-unroll]: 19.741 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / baseline [unroll-inline-tail]
[OK] rt05-nested-mix / baseline [unroll-inline-tail]: 19.534 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / baseline [unroll-tail-inline]
[OK] rt05-nested-mix / baseline [unroll-tail-inline]: 19.333 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / baseline [tail-inline-unroll]
[OK] rt05-nested-mix / baseline [tail-inline-unroll]: 19.563 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / baseline [tail-unroll-inline]
[OK] rt05-nested-mix / baseline [tail-unroll-inline]: 19.684 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / no-inline [inline-unroll-tail]
[OK] rt05-nested-mix / no-inline [inline-unroll-tail]: 19.688 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / no-inline [inline-tail-unroll]
[OK] rt05-nested-mix / no-inline [inline-tail-unroll]: 19.619 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / no-inline [unroll-inline-tail]
[OK] rt05-nested-mix / no-inline [unroll-inline-tail]: 19.919 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / no-inline [unroll-tail-inline]
[OK] rt05-nested-mix / no-inline [unroll-tail-inline]: 19.851 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / no-inline [tail-inline-unroll]
[OK] rt05-nested-mix / no-inline [tail-inline-unroll]: 19.781 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / no-inline [tail-unroll-inline]
[OK] rt05-nested-mix / no-inline [tail-unroll-inline]: 19.630 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / unroll-4 [inline-unroll-tail]
[OK] rt05-nested-mix / unroll-4 [inline-unroll-tail]: 19.662 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / unroll-4 [inline-tail-unroll]
[OK] rt05-nested-mix / unroll-4 [inline-tail-unroll]: 19.743 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / unroll-4 [unroll-inline-tail]
[OK] rt05-nested-mix / unroll-4 [unroll-inline-tail]: 19.805 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / unroll-4 [unroll-tail-inline]
[OK] rt05-nested-mix / unroll-4 [unroll-tail-inline]: 19.693 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / unroll-4 [tail-inline-unroll]
[OK] rt05-nested-mix / unroll-4 [tail-inline-unroll]: 19.705 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / unroll-4 [tail-unroll-inline]
[OK] rt05-nested-mix / unroll-4 [tail-unroll-inline]: 19.676 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / unroll-8 [inline-unroll-tail]
[OK] rt05-nested-mix / unroll-8 [inline-unroll-tail]: 19.826 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / unroll-8 [inline-tail-unroll]
[OK] rt05-nested-mix / unroll-8 [inline-tail-unroll]: 19.870 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / unroll-8 [unroll-inline-tail]
[OK] rt05-nested-mix / unroll-8 [unroll-inline-tail]: 19.688 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / unroll-8 [unroll-tail-inline]
[OK] rt05-nested-mix / unroll-8 [unroll-tail-inline]: 19.614 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / unroll-8 [tail-inline-unroll]
[OK] rt05-nested-mix / unroll-8 [tail-inline-unroll]: 19.794 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / unroll-8 [tail-unroll-inline]
[OK] rt05-nested-mix / unroll-8 [tail-unroll-inline]: 19.532 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / tail-off [inline-unroll-tail]
[OK] rt05-nested-mix / tail-off [inline-unroll-tail]: 19.834 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / tail-off [inline-tail-unroll]
[OK] rt05-nested-mix / tail-off [inline-tail-unroll]: 19.639 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / tail-off [unroll-inline-tail]
[OK] rt05-nested-mix / tail-off [unroll-inline-tail]: 19.757 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / tail-off [unroll-tail-inline]
[OK] rt05-nested-mix / tail-off [unroll-tail-inline]: 19.494 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / tail-off [tail-inline-unroll]
[OK] rt05-nested-mix / tail-off [tail-inline-unroll]: 19.443 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / tail-off [tail-unroll-inline]
[OK] rt05-nested-mix / tail-off [tail-unroll-inline]: 19.643 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt05-nested-mix / combo-inline-unroll [inline-unroll-tail]
[OK] rt05-nested-mix / combo-inline-unroll [inline-unroll-tail]: 19.676 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt05-nested-mix / combo-inline-unroll [inline-tail-unroll]
[OK] rt05-nested-mix / combo-inline-unroll [inline-tail-unroll]: 19.749 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt05-nested-mix / combo-inline-unroll [unroll-inline-tail]
[OK] rt05-nested-mix / combo-inline-unroll [unroll-inline-tail]: 19.512 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt05-nested-mix / combo-inline-unroll [unroll-tail-inline]
[OK] rt05-nested-mix / combo-inline-unroll [unroll-tail-inline]: 19.839 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt05-nested-mix / combo-inline-unroll [tail-inline-unroll]
[OK] rt05-nested-mix / combo-inline-unroll [tail-inline-unroll]: 19.654 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt05-nested-mix / combo-inline-unroll [tail-unroll-inline]
[OK] rt05-nested-mix / combo-inline-unroll [tail-unroll-inline]: 19.484 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / baseline [inline-unroll-tail]
[OK] rt06-string-wrapping / baseline [inline-unroll-tail]: 19.647 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / baseline [inline-tail-unroll]
[OK] rt06-string-wrapping / baseline [inline-tail-unroll]: 19.757 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / baseline [unroll-inline-tail]
[OK] rt06-string-wrapping / baseline [unroll-inline-tail]: 19.870 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / baseline [unroll-tail-inline]
[OK] rt06-string-wrapping / baseline [unroll-tail-inline]: 19.496 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / baseline [tail-inline-unroll]
[OK] rt06-string-wrapping / baseline [tail-inline-unroll]: 19.685 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / baseline [tail-unroll-inline]
[OK] rt06-string-wrapping / baseline [tail-unroll-inline]: 19.513 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / no-inline [inline-unroll-tail]
[OK] rt06-string-wrapping / no-inline [inline-unroll-tail]: 19.582 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / no-inline [inline-tail-unroll]
[OK] rt06-string-wrapping / no-inline [inline-tail-unroll]: 19.649 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / no-inline [unroll-inline-tail]
[OK] rt06-string-wrapping / no-inline [unroll-inline-tail]: 19.905 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / no-inline [unroll-tail-inline]
[OK] rt06-string-wrapping / no-inline [unroll-tail-inline]: 19.712 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / no-inline [tail-inline-unroll]
[OK] rt06-string-wrapping / no-inline [tail-inline-unroll]: 19.750 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / no-inline [tail-unroll-inline]
[OK] rt06-string-wrapping / no-inline [tail-unroll-inline]: 19.834 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / unroll-4 [inline-unroll-tail]
[OK] rt06-string-wrapping / unroll-4 [inline-unroll-tail]: 19.678 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / unroll-4 [inline-tail-unroll]
[OK] rt06-string-wrapping / unroll-4 [inline-tail-unroll]: 19.721 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / unroll-4 [unroll-inline-tail]
[OK] rt06-string-wrapping / unroll-4 [unroll-inline-tail]: 19.431 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / unroll-4 [unroll-tail-inline]
[OK] rt06-string-wrapping / unroll-4 [unroll-tail-inline]: 19.409 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / unroll-4 [tail-inline-unroll]
[OK] rt06-string-wrapping / unroll-4 [tail-inline-unroll]: 19.784 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / unroll-4 [tail-unroll-inline]
[OK] rt06-string-wrapping / unroll-4 [tail-unroll-inline]: 19.585 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / unroll-8 [inline-unroll-tail]
[OK] rt06-string-wrapping / unroll-8 [inline-unroll-tail]: 19.591 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / unroll-8 [inline-tail-unroll]
[OK] rt06-string-wrapping / unroll-8 [inline-tail-unroll]: 19.645 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / unroll-8 [unroll-inline-tail]
[OK] rt06-string-wrapping / unroll-8 [unroll-inline-tail]: 19.621 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / unroll-8 [unroll-tail-inline]
[OK] rt06-string-wrapping / unroll-8 [unroll-tail-inline]: 19.368 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / unroll-8 [tail-inline-unroll]
[OK] rt06-string-wrapping / unroll-8 [tail-inline-unroll]: 19.693 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / unroll-8 [tail-unroll-inline]
[OK] rt06-string-wrapping / unroll-8 [tail-unroll-inline]: 19.689 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / tail-off [inline-unroll-tail]
[OK] rt06-string-wrapping / tail-off [inline-unroll-tail]: 19.568 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / tail-off [inline-tail-unroll]
[OK] rt06-string-wrapping / tail-off [inline-tail-unroll]: 19.760 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / tail-off [unroll-inline-tail]
[OK] rt06-string-wrapping / tail-off [unroll-inline-tail]: 19.547 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / tail-off [unroll-tail-inline]
[OK] rt06-string-wrapping / tail-off [unroll-tail-inline]: 19.856 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / tail-off [tail-inline-unroll]
[OK] rt06-string-wrapping / tail-off [tail-inline-unroll]: 19.674 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / tail-off [tail-unroll-inline]
[OK] rt06-string-wrapping / tail-off [tail-unroll-inline]: 19.752 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt06-string-wrapping / combo-inline-unroll [inline-unroll-tail]
[OK] rt06-string-wrapping / combo-inline-unroll [inline-unroll-tail]: 19.803 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt06-string-wrapping / combo-inline-unroll [inline-tail-unroll]
[OK] rt06-string-wrapping / combo-inline-unroll [inline-tail-unroll]: 19.785 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt06-string-wrapping / combo-inline-unroll [unroll-inline-tail]
[OK] rt06-string-wrapping / combo-inline-unroll [unroll-inline-tail]: 19.775 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt06-string-wrapping / combo-inline-unroll [unroll-tail-inline]
[OK] rt06-string-wrapping / combo-inline-unroll [unroll-tail-inline]: 19.515 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt06-string-wrapping / combo-inline-unroll [tail-inline-unroll]
[OK] rt06-string-wrapping / combo-inline-unroll [tail-inline-unroll]: 19.936 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt06-string-wrapping / combo-inline-unroll [tail-unroll-inline]
[OK] rt06-string-wrapping / combo-inline-unroll [tail-unroll-inline]: 19.942 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / baseline [inline-unroll-tail]
[OK] rt07-helper-inline / baseline [inline-unroll-tail]: 19.861 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / baseline [inline-tail-unroll]
[OK] rt07-helper-inline / baseline [inline-tail-unroll]: 20.050 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / baseline [unroll-inline-tail]
[OK] rt07-helper-inline / baseline [unroll-inline-tail]: 19.908 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / baseline [unroll-tail-inline]
[OK] rt07-helper-inline / baseline [unroll-tail-inline]: 19.921 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / baseline [tail-inline-unroll]
[OK] rt07-helper-inline / baseline [tail-inline-unroll]: 20.110 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / baseline [tail-unroll-inline]
[OK] rt07-helper-inline / baseline [tail-unroll-inline]: 19.701 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / no-inline [inline-unroll-tail]
[OK] rt07-helper-inline / no-inline [inline-unroll-tail]: 19.883 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / no-inline [inline-tail-unroll]
[OK] rt07-helper-inline / no-inline [inline-tail-unroll]: 19.827 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / no-inline [unroll-inline-tail]
[OK] rt07-helper-inline / no-inline [unroll-inline-tail]: 20.011 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / no-inline [unroll-tail-inline]
[OK] rt07-helper-inline / no-inline [unroll-tail-inline]: 19.851 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / no-inline [tail-inline-unroll]
[OK] rt07-helper-inline / no-inline [tail-inline-unroll]: 19.857 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / no-inline [tail-unroll-inline]
[OK] rt07-helper-inline / no-inline [tail-unroll-inline]: 19.863 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / unroll-4 [inline-unroll-tail]
[OK] rt07-helper-inline / unroll-4 [inline-unroll-tail]: 19.832 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / unroll-4 [inline-tail-unroll]
[OK] rt07-helper-inline / unroll-4 [inline-tail-unroll]: 19.860 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / unroll-4 [unroll-inline-tail]
[OK] rt07-helper-inline / unroll-4 [unroll-inline-tail]: 19.687 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / unroll-4 [unroll-tail-inline]
[OK] rt07-helper-inline / unroll-4 [unroll-tail-inline]: 19.826 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / unroll-4 [tail-inline-unroll]
[OK] rt07-helper-inline / unroll-4 [tail-inline-unroll]: 20.406 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / unroll-4 [tail-unroll-inline]
[OK] rt07-helper-inline / unroll-4 [tail-unroll-inline]: 20.036 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / unroll-8 [inline-unroll-tail]
[OK] rt07-helper-inline / unroll-8 [inline-unroll-tail]: 19.976 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / unroll-8 [inline-tail-unroll]
[OK] rt07-helper-inline / unroll-8 [inline-tail-unroll]: 19.869 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / unroll-8 [unroll-inline-tail]
[OK] rt07-helper-inline / unroll-8 [unroll-inline-tail]: 20.087 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / unroll-8 [unroll-tail-inline]
[OK] rt07-helper-inline / unroll-8 [unroll-tail-inline]: 19.743 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / unroll-8 [tail-inline-unroll]
[OK] rt07-helper-inline / unroll-8 [tail-inline-unroll]: 19.700 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / unroll-8 [tail-unroll-inline]
[OK] rt07-helper-inline / unroll-8 [tail-unroll-inline]: 19.734 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / tail-off [inline-unroll-tail]
[OK] rt07-helper-inline / tail-off [inline-unroll-tail]: 19.802 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / tail-off [inline-tail-unroll]
[OK] rt07-helper-inline / tail-off [inline-tail-unroll]: 19.625 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / tail-off [unroll-inline-tail]
[OK] rt07-helper-inline / tail-off [unroll-inline-tail]: 19.994 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / tail-off [unroll-tail-inline]
[OK] rt07-helper-inline / tail-off [unroll-tail-inline]: 19.797 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / tail-off [tail-inline-unroll]
[OK] rt07-helper-inline / tail-off [tail-inline-unroll]: 19.675 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / tail-off [tail-unroll-inline]
[OK] rt07-helper-inline / tail-off [tail-unroll-inline]: 19.627 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt07-helper-inline / combo-inline-unroll [inline-unroll-tail]
[OK] rt07-helper-inline / combo-inline-unroll [inline-unroll-tail]: 19.839 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt07-helper-inline / combo-inline-unroll [inline-tail-unroll]
[OK] rt07-helper-inline / combo-inline-unroll [inline-tail-unroll]: 19.628 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt07-helper-inline / combo-inline-unroll [unroll-inline-tail]
[OK] rt07-helper-inline / combo-inline-unroll [unroll-inline-tail]: 19.705 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt07-helper-inline / combo-inline-unroll [unroll-tail-inline]
[OK] rt07-helper-inline / combo-inline-unroll [unroll-tail-inline]: 19.623 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt07-helper-inline / combo-inline-unroll [tail-inline-unroll]
[OK] rt07-helper-inline / combo-inline-unroll [tail-inline-unroll]: 19.812 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt07-helper-inline / combo-inline-unroll [tail-unroll-inline]
[OK] rt07-helper-inline / combo-inline-unroll [tail-unroll-inline]: 19.891 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / baseline [inline-unroll-tail]
[OK] rt08-branchy-loop / baseline [inline-unroll-tail]: 19.687 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / baseline [inline-tail-unroll]
[OK] rt08-branchy-loop / baseline [inline-tail-unroll]: 19.703 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / baseline [unroll-inline-tail]
[OK] rt08-branchy-loop / baseline [unroll-inline-tail]: 19.551 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / baseline [unroll-tail-inline]
[OK] rt08-branchy-loop / baseline [unroll-tail-inline]: 19.670 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / baseline [tail-inline-unroll]
[OK] rt08-branchy-loop / baseline [tail-inline-unroll]: 19.691 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / baseline [tail-unroll-inline]
[OK] rt08-branchy-loop / baseline [tail-unroll-inline]: 19.706 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / no-inline [inline-unroll-tail]
[OK] rt08-branchy-loop / no-inline [inline-unroll-tail]: 19.782 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / no-inline [inline-tail-unroll]
[OK] rt08-branchy-loop / no-inline [inline-tail-unroll]: 19.577 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / no-inline [unroll-inline-tail]
[OK] rt08-branchy-loop / no-inline [unroll-inline-tail]: 19.622 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / no-inline [unroll-tail-inline]
[OK] rt08-branchy-loop / no-inline [unroll-tail-inline]: 19.857 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / no-inline [tail-inline-unroll]
[OK] rt08-branchy-loop / no-inline [tail-inline-unroll]: 19.851 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / no-inline [tail-unroll-inline]
[OK] rt08-branchy-loop / no-inline [tail-unroll-inline]: 19.828 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / unroll-4 [inline-unroll-tail]
[OK] rt08-branchy-loop / unroll-4 [inline-unroll-tail]: 19.823 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / unroll-4 [inline-tail-unroll]
[OK] rt08-branchy-loop / unroll-4 [inline-tail-unroll]: 19.572 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / unroll-4 [unroll-inline-tail]
[OK] rt08-branchy-loop / unroll-4 [unroll-inline-tail]: 19.734 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / unroll-4 [unroll-tail-inline]
[OK] rt08-branchy-loop / unroll-4 [unroll-tail-inline]: 19.868 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / unroll-4 [tail-inline-unroll]
[OK] rt08-branchy-loop / unroll-4 [tail-inline-unroll]: 19.731 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / unroll-4 [tail-unroll-inline]
[OK] rt08-branchy-loop / unroll-4 [tail-unroll-inline]: 19.836 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / unroll-8 [inline-unroll-tail]
[OK] rt08-branchy-loop / unroll-8 [inline-unroll-tail]: 19.823 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / unroll-8 [inline-tail-unroll]
[OK] rt08-branchy-loop / unroll-8 [inline-tail-unroll]: 20.001 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / unroll-8 [unroll-inline-tail]
[OK] rt08-branchy-loop / unroll-8 [unroll-inline-tail]: 19.795 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / unroll-8 [unroll-tail-inline]
[OK] rt08-branchy-loop / unroll-8 [unroll-tail-inline]: 19.955 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / unroll-8 [tail-inline-unroll]
[OK] rt08-branchy-loop / unroll-8 [tail-inline-unroll]: 19.691 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / unroll-8 [tail-unroll-inline]
[OK] rt08-branchy-loop / unroll-8 [tail-unroll-inline]: 19.608 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / tail-off [inline-unroll-tail]
[OK] rt08-branchy-loop / tail-off [inline-unroll-tail]: 19.634 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / tail-off [inline-tail-unroll]
[OK] rt08-branchy-loop / tail-off [inline-tail-unroll]: 19.763 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / tail-off [unroll-inline-tail]
[OK] rt08-branchy-loop / tail-off [unroll-inline-tail]: 19.365 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / tail-off [unroll-tail-inline]
[OK] rt08-branchy-loop / tail-off [unroll-tail-inline]: 19.727 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / tail-off [tail-inline-unroll]
[OK] rt08-branchy-loop / tail-off [tail-inline-unroll]: 19.630 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / tail-off [tail-unroll-inline]
[OK] rt08-branchy-loop / tail-off [tail-unroll-inline]: 19.772 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt08-branchy-loop / combo-inline-unroll [inline-unroll-tail]
[OK] rt08-branchy-loop / combo-inline-unroll [inline-unroll-tail]: 20.178 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt08-branchy-loop / combo-inline-unroll [inline-tail-unroll]
[OK] rt08-branchy-loop / combo-inline-unroll [inline-tail-unroll]: 20.158 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt08-branchy-loop / combo-inline-unroll [unroll-inline-tail]
[OK] rt08-branchy-loop / combo-inline-unroll [unroll-inline-tail]: 20.112 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt08-branchy-loop / combo-inline-unroll [unroll-tail-inline]
[OK] rt08-branchy-loop / combo-inline-unroll [unroll-tail-inline]: 19.989 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt08-branchy-loop / combo-inline-unroll [tail-inline-unroll]
[OK] rt08-branchy-loop / combo-inline-unroll [tail-inline-unroll]: 20.332 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt08-branchy-loop / combo-inline-unroll [tail-unroll-inline]
[OK] rt08-branchy-loop / combo-inline-unroll [tail-unroll-inline]: 20.184 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / baseline [inline-unroll-tail]
[OK] rt09-matrix-mix / baseline [inline-unroll-tail]: 20.066 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / baseline [inline-tail-unroll]
[OK] rt09-matrix-mix / baseline [inline-tail-unroll]: 20.092 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / baseline [unroll-inline-tail]
[OK] rt09-matrix-mix / baseline [unroll-inline-tail]: 19.892 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / baseline [unroll-tail-inline]
[OK] rt09-matrix-mix / baseline [unroll-tail-inline]: 19.867 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / baseline [tail-inline-unroll]
[OK] rt09-matrix-mix / baseline [tail-inline-unroll]: 20.060 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / baseline [tail-unroll-inline]
[OK] rt09-matrix-mix / baseline [tail-unroll-inline]: 19.875 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / no-inline [inline-unroll-tail]
[OK] rt09-matrix-mix / no-inline [inline-unroll-tail]: 20.085 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / no-inline [inline-tail-unroll]
[OK] rt09-matrix-mix / no-inline [inline-tail-unroll]: 20.040 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / no-inline [unroll-inline-tail]
[OK] rt09-matrix-mix / no-inline [unroll-inline-tail]: 20.105 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / no-inline [unroll-tail-inline]
[OK] rt09-matrix-mix / no-inline [unroll-tail-inline]: 19.584 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / no-inline [tail-inline-unroll]
[OK] rt09-matrix-mix / no-inline [tail-inline-unroll]: 19.596 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / no-inline [tail-unroll-inline]
[OK] rt09-matrix-mix / no-inline [tail-unroll-inline]: 19.694 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / unroll-4 [inline-unroll-tail]
[OK] rt09-matrix-mix / unroll-4 [inline-unroll-tail]: 19.784 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / unroll-4 [inline-tail-unroll]
[OK] rt09-matrix-mix / unroll-4 [inline-tail-unroll]: 19.925 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / unroll-4 [unroll-inline-tail]
[OK] rt09-matrix-mix / unroll-4 [unroll-inline-tail]: 19.824 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / unroll-4 [unroll-tail-inline]
[OK] rt09-matrix-mix / unroll-4 [unroll-tail-inline]: 19.870 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / unroll-4 [tail-inline-unroll]
[OK] rt09-matrix-mix / unroll-4 [tail-inline-unroll]: 19.754 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / unroll-4 [tail-unroll-inline]
[OK] rt09-matrix-mix / unroll-4 [tail-unroll-inline]: 19.848 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / unroll-8 [inline-unroll-tail]
[OK] rt09-matrix-mix / unroll-8 [inline-unroll-tail]: 19.671 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / unroll-8 [inline-tail-unroll]
[OK] rt09-matrix-mix / unroll-8 [inline-tail-unroll]: 19.894 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / unroll-8 [unroll-inline-tail]
[OK] rt09-matrix-mix / unroll-8 [unroll-inline-tail]: 19.917 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / unroll-8 [unroll-tail-inline]
[OK] rt09-matrix-mix / unroll-8 [unroll-tail-inline]: 20.062 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / unroll-8 [tail-inline-unroll]
[OK] rt09-matrix-mix / unroll-8 [tail-inline-unroll]: 19.915 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / unroll-8 [tail-unroll-inline]
[OK] rt09-matrix-mix / unroll-8 [tail-unroll-inline]: 19.840 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / tail-off [inline-unroll-tail]
[OK] rt09-matrix-mix / tail-off [inline-unroll-tail]: 19.911 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / tail-off [inline-tail-unroll]
[OK] rt09-matrix-mix / tail-off [inline-tail-unroll]: 19.852 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / tail-off [unroll-inline-tail]
[OK] rt09-matrix-mix / tail-off [unroll-inline-tail]: 19.903 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / tail-off [unroll-tail-inline]
[OK] rt09-matrix-mix / tail-off [unroll-tail-inline]: 19.832 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / tail-off [tail-inline-unroll]
[OK] rt09-matrix-mix / tail-off [tail-inline-unroll]: 19.897 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / tail-off [tail-unroll-inline]
[OK] rt09-matrix-mix / tail-off [tail-unroll-inline]: 19.836 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt09-matrix-mix / combo-inline-unroll [inline-unroll-tail]
[OK] rt09-matrix-mix / combo-inline-unroll [inline-unroll-tail]: 19.869 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt09-matrix-mix / combo-inline-unroll [inline-tail-unroll]
[OK] rt09-matrix-mix / combo-inline-unroll [inline-tail-unroll]: 19.943 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt09-matrix-mix / combo-inline-unroll [unroll-inline-tail]
[OK] rt09-matrix-mix / combo-inline-unroll [unroll-inline-tail]: 19.983 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt09-matrix-mix / combo-inline-unroll [unroll-tail-inline]
[OK] rt09-matrix-mix / combo-inline-unroll [unroll-tail-inline]: 19.966 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt09-matrix-mix / combo-inline-unroll [tail-inline-unroll]
[OK] rt09-matrix-mix / combo-inline-unroll [tail-inline-unroll]: 20.191 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt09-matrix-mix / combo-inline-unroll [tail-unroll-inline]
[OK] rt09-matrix-mix / combo-inline-unroll [tail-unroll-inline]: 20.321 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / baseline [inline-unroll-tail]
[OK] rt10-control-baseline / baseline [inline-unroll-tail]: 20.278 ms (flags: --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / baseline [inline-tail-unroll]
[OK] rt10-control-baseline / baseline [inline-tail-unroll]: 20.300 ms (flags: --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / baseline [unroll-inline-tail]
[OK] rt10-control-baseline / baseline [unroll-inline-tail]: 20.197 ms (flags: --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / baseline [unroll-tail-inline]
[OK] rt10-control-baseline / baseline [unroll-tail-inline]: 19.958 ms (flags: --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / baseline [tail-inline-unroll]
[OK] rt10-control-baseline / baseline [tail-inline-unroll]: 20.120 ms (flags: --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / baseline [tail-unroll-inline]
[OK] rt10-control-baseline / baseline [tail-unroll-inline]: 20.205 ms (flags: --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / no-inline [inline-unroll-tail]
[OK] rt10-control-baseline / no-inline [inline-unroll-tail]: 20.100 ms (flags: --no-inline --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / no-inline [inline-tail-unroll]
[OK] rt10-control-baseline / no-inline [inline-tail-unroll]: 20.358 ms (flags: --no-inline --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / no-inline [unroll-inline-tail]
[OK] rt10-control-baseline / no-inline [unroll-inline-tail]: 20.366 ms (flags: --no-inline --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / no-inline [unroll-tail-inline]
[OK] rt10-control-baseline / no-inline [unroll-tail-inline]: 20.303 ms (flags: --no-inline --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / no-inline [tail-inline-unroll]
[OK] rt10-control-baseline / no-inline [tail-inline-unroll]: 20.353 ms (flags: --no-inline --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / no-inline [tail-unroll-inline]
[OK] rt10-control-baseline / no-inline [tail-unroll-inline]: 20.295 ms (flags: --no-inline --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / unroll-4 [inline-unroll-tail]
[OK] rt10-control-baseline / unroll-4 [inline-unroll-tail]: 20.007 ms (flags: --unroll-factor=4 --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / unroll-4 [inline-tail-unroll]
[OK] rt10-control-baseline / unroll-4 [inline-tail-unroll]: 20.375 ms (flags: --unroll-factor=4 --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / unroll-4 [unroll-inline-tail]
[OK] rt10-control-baseline / unroll-4 [unroll-inline-tail]: 20.151 ms (flags: --unroll-factor=4 --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / unroll-4 [unroll-tail-inline]
[OK] rt10-control-baseline / unroll-4 [unroll-tail-inline]: 19.827 ms (flags: --unroll-factor=4 --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / unroll-4 [tail-inline-unroll]
[OK] rt10-control-baseline / unroll-4 [tail-inline-unroll]: 19.972 ms (flags: --unroll-factor=4 --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / unroll-4 [tail-unroll-inline]
[OK] rt10-control-baseline / unroll-4 [tail-unroll-inline]: 19.748 ms (flags: --unroll-factor=4 --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / unroll-8 [inline-unroll-tail]
[OK] rt10-control-baseline / unroll-8 [inline-unroll-tail]: 19.846 ms (flags: --unroll-factor=8 --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / unroll-8 [inline-tail-unroll]
[OK] rt10-control-baseline / unroll-8 [inline-tail-unroll]: 20.033 ms (flags: --unroll-factor=8 --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / unroll-8 [unroll-inline-tail]
[OK] rt10-control-baseline / unroll-8 [unroll-inline-tail]: 19.825 ms (flags: --unroll-factor=8 --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / unroll-8 [unroll-tail-inline]
[OK] rt10-control-baseline / unroll-8 [unroll-tail-inline]: 19.952 ms (flags: --unroll-factor=8 --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / unroll-8 [tail-inline-unroll]
[OK] rt10-control-baseline / unroll-8 [tail-inline-unroll]: 19.833 ms (flags: --unroll-factor=8 --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / unroll-8 [tail-unroll-inline]
[OK] rt10-control-baseline / unroll-8 [tail-unroll-inline]: 19.826 ms (flags: --unroll-factor=8 --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / tail-off [inline-unroll-tail]
[OK] rt10-control-baseline / tail-off [inline-unroll-tail]: 19.802 ms (flags: --tail=off --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / tail-off [inline-tail-unroll]
[OK] rt10-control-baseline / tail-off [inline-tail-unroll]: 19.897 ms (flags: --tail=off --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / tail-off [unroll-inline-tail]
[OK] rt10-control-baseline / tail-off [unroll-inline-tail]: 19.699 ms (flags: --tail=off --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / tail-off [unroll-tail-inline]
[OK] rt10-control-baseline / tail-off [unroll-tail-inline]: 19.943 ms (flags: --tail=off --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / tail-off [tail-inline-unroll]
[OK] rt10-control-baseline / tail-off [tail-inline-unroll]: 19.981 ms (flags: --tail=off --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / tail-off [tail-unroll-inline]
[OK] rt10-control-baseline / tail-off [tail-unroll-inline]: 19.913 ms (flags: --tail=off --pass-order=tail,unroll,inline)
[RUN] rt10-control-baseline / combo-inline-unroll [inline-unroll-tail]
[OK] rt10-control-baseline / combo-inline-unroll [inline-unroll-tail]: 19.818 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,unroll,tail)
[RUN] rt10-control-baseline / combo-inline-unroll [inline-tail-unroll]
[OK] rt10-control-baseline / combo-inline-unroll [inline-tail-unroll]: 19.861 ms (flags: --unroll-factor=4 --no-inline --pass-order=inline,tail,unroll)
[RUN] rt10-control-baseline / combo-inline-unroll [unroll-inline-tail]
[OK] rt10-control-baseline / combo-inline-unroll [unroll-inline-tail]: 19.727 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,inline,tail)
[RUN] rt10-control-baseline / combo-inline-unroll [unroll-tail-inline]
[OK] rt10-control-baseline / combo-inline-unroll [unroll-tail-inline]: 19.797 ms (flags: --unroll-factor=4 --no-inline --pass-order=unroll,tail,inline)
[RUN] rt10-control-baseline / combo-inline-unroll [tail-inline-unroll]
[OK] rt10-control-baseline / combo-inline-unroll [tail-inline-unroll]: 19.817 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,inline,unroll)
[RUN] rt10-control-baseline / combo-inline-unroll [tail-unroll-inline]
[OK] rt10-control-baseline / combo-inline-unroll [tail-unroll-inline]: 19.804 ms (flags: --unroll-factor=4 --no-inline --pass-order=tail,unroll,inline)

Wrote 360 rows to /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/results.csv
[collect] running: ./make
[collect] running: ./make test
[collect] running: /home/j4ck1e/.pyenv/versions/3.11.13/bin/python3 /home/j4ck1e/projects/tubular-upgrade/autotuning/run_autotune.py --config research_tests/config.json --output /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/results.csv --out-dir /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/out
[collect] wrote summary to /home/j4ck1e/projects/tubular-upgrade/artifacts/research/batch_runs/run3/summary.json

=== Top variant deltas (best vs worst pass order) ===
rt02-tail-factorial/unroll-4: inline-tail-unroll (19.556 ms) vs tail-unroll-inline (20.407 ms) → Δ 0.852 ms (4.2 %)
rt07-helper-inline/unroll-4: unroll-inline-tail (19.687 ms) vs tail-inline-unroll (20.406 ms) → Δ 0.718 ms (3.5 %)
rt10-control-baseline/unroll-4: tail-unroll-inline (19.748 ms) vs inline-tail-unroll (20.375 ms) → Δ 0.627 ms (3.1 %)
rt09-matrix-mix/no-inline: unroll-tail-inline (19.584 ms) vs unroll-inline-tail (20.105 ms) → Δ 0.520 ms (2.6 %)
rt04-stride-heavy-loop/unroll-8: unroll-tail-inline (19.565 ms) vs unroll-inline-tail (20.077 ms) → Δ 0.512 ms (2.6 %)
rt03-loop-summation/tail-off: inline-unroll-tail (19.732 ms) vs tail-inline-unroll (20.184 ms) → Δ 0.452 ms (2.2 %)
rt09-matrix-mix/combo-inline-unroll: inline-unroll-tail (19.869 ms) vs tail-unroll-inline (20.321 ms) → Δ 0.453 ms (2.2 %)
rt06-string-wrapping/combo-inline-unroll: unroll-tail-inline (19.515 ms) vs tail-unroll-inline (19.942 ms) → Δ 0.427 ms (2.1 %)
rt05-nested-mix/baseline: unroll-tail-inline (19.333 ms) vs inline-tail-unroll (19.741 ms) → Δ 0.408 ms (2.1 %)
rt08-branchy-loop/tail-off: unroll-inline-tail (19.365 ms) vs tail-unroll-inline (19.772 ms) → Δ 0.407 ms (2.1 %)

=== Pass order aggregates (lower is better) ===
unroll-tail-inline: mean=19.862 ms (min=19.333, max=20.851, samples=60)
tail-unroll-inline: mean=19.884 ms (min=19.484, max=20.755, samples=60)
inline-unroll-tail: mean=19.892 ms (min=19.511, max=20.807, samples=60)
unroll-inline-tail: mean=19.896 ms (min=19.365, max=20.682, samples=60)
inline-tail-unroll: mean=19.905 ms (min=19.498, max=20.792, samples=60)
tail-inline-unroll: mean=19.916 ms (min=19.443, max=20.868, samples=60)

[exit 0]
