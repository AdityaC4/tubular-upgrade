// Simple tail-recursive fibonacci that avoids parameter cycles
// Uses temp variables to break dependency cycles
// main returns fib_simple(40) = 102334155

function fib_simple(int n) : int {
  if (n == 0) return 0;
  if (n == 1) return 1;
  return fib_helper(n, 0, 1);
}

function fib_helper(int n, int a, int b) : int {
  if (n == 1) return b;
  return fib_helper(n - 1, b, a + b);
}

function main() : int {
  return fib_simple(40);
}
